openapi: 3.0.0
info:
  title: Compacine
  description: "Projeto em equipe, de desafio, da empresa CompassUol, que consiste na criação de uma API sobre um cinema, com entidades de Filmes, Sessões e Ingressos e seus end points."
  termsOfService: http://swagger.io/terms/
  contact:
    name: "Artur, Eduardo Ferreira, Luan, Matheus e Maysa"
    email: artur.ferreira.pb@compasso.com.br
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/ArturMartinsFerreira/Compacine/1.0.0
  description: SwaggerHub API Auto Mocking
- url: http://localhost:3000/api
  description: Link de acesso à API
tags:
- name: Movie
  description: Operações sobre os filmes
- name: Sessions
  description: Operações sobre as sessões dos filmes
- name: Tickets
  description: Operações sobre os ingressos das sessões
  externalDocs:
    description: Find out more about our store
    url: http://swagger.io
paths:
  /movies:
    get:
      tags:
      - Movie
      summary: Lista todos os filmes
      description: Retorna uma lista de filmes
      operationId: listarFilmes
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FilmesResponseList'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FilmesResponseList'
        "400":
          description: Invalid status value
    post:
      tags:
      - Movie
      summary: Cadastra um novo filme
      operationId: cadastraFilme
      requestBody:
        description: Updated movie object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilmeRequest'
        required: true
      responses:
        "405":
          description: Invalid input
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilmesReponseCA'
            application/xml:
              schema:
                $ref: '#/components/schemas/FilmesReponseCA'
  /movies/{id}:
    get:
      tags:
      - Movie
      summary: Lista filme por ID
      description: Retorna um filme selecionado por id
      operationId: PegaFilmePorID
      parameters:
      - name: id
        in: path
        description: ID of movie to return
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilmesResponseList'
            application/xml:
              schema:
                $ref: '#/components/schemas/FilmesResponseList'
        "400":
          description: Invalid ID supplied
        "404":
          description: Movie not found
    put:
      tags:
      - Movie
      summary: Atualiza filme por id
      description: Atualiza filme selecionado por id
      operationId: AtualizaFilmePorId
      parameters:
      - name: id
        in: path
        description: ID of movie to return
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: Updated movie object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilmeRequest'
        required: true
      responses:
        "400":
          description: Invalid movie supplied
        "404":
          description: movie not found
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilmesReponseCA'
            application/xml:
              schema:
                $ref: '#/components/schemas/FilmesReponseCA'
    delete:
      tags:
      - Movie
      summary: Deleta um filme
      operationId: deleteFilme
      parameters:
      - name: id
        in: path
        description: Deleta filme por id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: No Content
  /movies/{movie_id}/sessions:
    post:
      tags:
      - Sessions
      summary: Cadastra uma nova sessão
      operationId: cadastraSession
      parameters:
      - name: movie_id
        in: path
        description: ID of movie to return
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: Updated session object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SessaoRequestCA'
        required: true
      responses:
        "405":
          description: Invalid input
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessaoResponseCA'
            application/xml:
              schema:
                $ref: '#/components/schemas/SessaoResponseCA'
  /movies/{movie_id}/sessions/{id}:
    put:
      tags:
      - Sessions
      summary: Atualiza sessão por id
      description: Atualiza Sessão selecionado por id
      operationId: AtualizaSessionPorId
      parameters:
      - name: movie_id
        in: path
        description: ID of movie to return
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: id
        in: path
        description: ID of session to return
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: Updated session object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SessaoRequestCA'
        required: true
      responses:
        "400":
          description: Invalid session supplied
        "404":
          description: session not found
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessaoResponseCA'
            application/xml:
              schema:
                $ref: '#/components/schemas/SessaoResponseCA'
    delete:
      tags:
      - Sessions
      summary: Deleta uma Sessão por id
      operationId: deleteSessionporID
      parameters:
      - name: movie_id
        in: path
        description: ID of movie to return
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: id
        in: path
        description: ID of session to return
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: No content
  /movies/{movie_id}/sessions/{session_id}/tickets:
    post:
      tags:
      - Tickets
      summary: Cadastra um novo ingresso
      operationId: cadastraTicket
      parameters:
      - name: movie_id
        in: path
        description: ID of movie to return
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: session_id
        in: path
        description: ID of session to return
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: Updated user object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TicketRequestCA'
        required: true
      responses:
        "405":
          description: Invalid input
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketResponseCA'
            application/xml:
              schema:
                $ref: '#/components/schemas/TicketResponseCA'
  /movies/{movie_id}/sessions/{session_id}/tickets/{id}:
    put:
      tags:
      - Tickets
      summary: Atualiza ingresso por id
      description: Atualiza ingresso selecionado por id
      operationId: AtualizaTicketPorId
      parameters:
      - name: movie_id
        in: path
        description: ID of movie to return
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: session_id
        in: path
        description: ID of session to return
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: id
        in: path
        description: ID of ticket to return
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: Updated user object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TicketRequestCA'
        required: true
      responses:
        "400":
          description: Invalid ticket supplied
        "404":
          description: Ticket not found
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketResponseCA'
            application/xml:
              schema:
                $ref: '#/components/schemas/TicketResponseCA'
    delete:
      tags:
      - Tickets
      summary: Deleta uma Ingresso por id
      operationId: deleteTicketporID
      parameters:
      - name: movie_id
        in: path
        description: ID of movie to return
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: session_id
        in: path
        description: ID of session to return
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: id
        in: path
        description: ID of ticket to return
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: NO content
components:
  schemas:
    FilmesResponseList:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: nomde do filme
        description:
          type: string
          example: descrição do filme
        actors:
          type: array
          items:
            type: string
            example: "actors, actors, actors"
        genre:
          type: string
          example: genero do filme
        release_date:
          type: string
          example: 03/06/2024
        sessions:
          type: array
          items:
            $ref: '#/components/schemas/FilmesResponseList_sessions'
      xml:
        name: FilmesResponseList
    FilmeRequest:
      type: object
      properties:
        name:
          type: string
          example: nome do filme
        description:
          type: string
          example: descrição do filme
        actors:
          type: array
          items:
            type: string
            example: "actors, actors, actors"
        genre:
          type: string
          example: genero do filme
        release_date:
          type: string
          example: 03/06/2024
      xml:
        name: FilmeRequest
    FilmesReponseCA:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: nome do filme
        description:
          type: string
          example: descrição do filme
        actors:
          type: array
          items:
            type: string
            example: "actors, actors, actors"
        genre:
          type: string
          example: genero do filme
        release_date:
          type: string
          example: 03/06/2024
      xml:
        name: FilmesResponseCA
    SessaoRequestCA:
      type: object
      properties:
        name:
          type: string
          example: nome da sala
        capacity:
          type: integer
          format: int64
          example: 100
        day:
          type: string
          example: 03/06/2024
        time:
          type: string
          example: 03/06/2024:23:00:000
      xml:
        name: SessaoRequestCA
    SessaoResponseCA:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: nome da sala
        capacity:
          type: integer
          format: int64
          example: 100
        day:
          type: string
          example: 03/06/2024
        time:
          type: string
          example: 03/06/2024:23:00:000
      xml:
        name: SessaoResponseCA
    TicketRequestCA:
      type: object
      properties:
        chair:
          type: string
          example: b1
        value:
          type: integer
          format: int64
          example: 10
      xml:
        name: TicketRequestCA
    TicketResponseCA:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        chair:
          type: string
          example: b1
        value:
          type: integer
          format: int64
          example: 10
      xml:
        name: TicketResponseCA
    FilmesResponseList_tickets:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        chair:
          type: string
          example: b1
        value:
          type: integer
          format: int64
          example: 10
    FilmesResponseList_sessions:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        room:
          type: string
          example: nome da sala
        capacity:
          type: integer
          format: int64
        day:
          type: string
          example: 03/06/2024
        time:
          type: string
          example: 03/06/2024:23:00:000
        tickets:
          type: array
          items:
            $ref: '#/components/schemas/FilmesResponseList_tickets'
